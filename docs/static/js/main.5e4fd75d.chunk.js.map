{"version":3,"sources":["views/Card.js","views/List.js","components/Slider.js","routes/index.js","views/ImageProcess.js","views/Container.js","App.js","serviceWorker.js","index.js"],"names":["MyCard","react_default","a","createElement","style","display","card","width","cover","src","process","filter","alt","bodyStyle","marginLeft","marginTop","Component","MyList","state","data","id","name","list","dataSource","this","renderItem","item","Item","key","Meta","avatar","title","href","description","MySlider","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","value","onChange","bind","assertThisInitialized","type","className","slider","defaultValue","allowClear","defaultProps","routes","path","exact","component","MyUpload","img","resultImg","fileList","filterObj","blur","brightness","contrast","grayscale","opacity","saturate","hue-rotate","invert","sepia","onSliderChange","info","_this2","file","status","console","log","reader","FileReader","readAsDataURL","originFileObj","onload","e","setState","target","result","_this3","arr","keys","forEach","push","concat","join","obj","_this4","dom","document","getElementById","pixelRatio","window","devicePixelRatio","offsetWidth","height","offsetHeight","cloneDom","cloneNode","setAttribute","Image","canvas","ctx","getContext","drawImage","toDataURL","svgImg","clearRect","downloadImage","XMLSerializer","serializeToString","replace","download","click","uploadImg","_this5","some","filterValue","packageFiter","upload","listType","es_button","icon","Slider","onClick","cssImageToPureImage","Sider","Header","Content","Container","selectedKey","location","hash","slice","layout","breakpoint","collapsedWidth","onCollapse","collapsed","menu","mode","defaultSelectedKeys","react_router_dom","to","background","padding","float","marginRight","minHeight","map","route","index","react_router","App","views_Container","Boolean","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5e4fd75d.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Card } from 'antd'\n\nclass MyCard extends Component {\n  render() {\n    return (\n      <div>\n        <div style={{ display: 'flex' }}>\n          <Card style={{ width: 300 }} cover={<img src={process.env.PUBLIC_URL + '/imgs/1.jpeg'} style={{ filter: 'blur(2px)' }} alt=\"\" />} bodyStyle={{ display: 'none' }} />\n          <Card style={{ width: 300, marginLeft: 20 }} cover={<img src={process.env.PUBLIC_URL + '/imgs/1.jpeg'} style={{filter: 'grayScale(100%)'}} alt=\"\" />} bodyStyle={{ display: 'none' }} />\n          <Card style={{ width: 300, marginLeft: 20 }} cover={<img src={process.env.PUBLIC_URL + '/imgs/1.jpeg'} style={{filter: 'brightness(50%)'}} alt=\"\" />} bodyStyle={{ display: 'none' }} />\n          <Card style={{ width: 300, marginLeft: 20 }} cover={<img src={process.env.PUBLIC_URL + '/imgs/1.jpeg'} style={{filter: 'contrast(30%)'}} alt=\"\" />} bodyStyle={{ display: 'none' }} />\n        </div>\n        <div style={{ display: 'flex', marginTop: 20 }}>\n          <Card style={{ width: 300 }} cover={<img src={process.env.PUBLIC_URL + '/imgs/1.jpeg'} style={{filter: 'hue-rotate(90deg)'}} alt=\"\" />} bodyStyle={{ display: 'none' }} />\n          <Card style={{ width: 300, marginLeft: 20 }} cover={<img src={process.env.PUBLIC_URL + '/imgs/1.jpeg'} style={{filter: 'invert(100%)'}} alt=\"\" />} bodyStyle={{ display: 'none' }} />\n          <Card style={{ width: 300, marginLeft: 20 }} cover={<img src={process.env.PUBLIC_URL + '/imgs/1.jpeg'} style={{filter: 'saturate(30%)'}} alt=\"\" />} bodyStyle={{ display: 'none' }} />\n          <Card style={{ width: 300, marginLeft: 20 }} cover={<img src={process.env.PUBLIC_URL + '/imgs/1.jpeg'} style={{filter: 'sepia(100%)'}} alt=\"\" />} bodyStyle={{ display: 'none' }} />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default MyCard\n","import React, { Component } from 'react'\nimport { List, Avatar } from 'antd'\n\nclass MyList extends Component {\n  state = {\n    data: [{\n      id: 1,\n      name: 'David'\n    }, {\n      id: 2,\n      name: 'Stephan'\n    }, {\n      id: 3,\n      name: 'Alan'\n    }, {\n      id: 1,\n      name: 'Lucy'\n    }]\n  }\n  render() {\n    return (\n      <List dataSource={this.state.data}\n        renderItem={item => (\n          <List.Item key={item.id}>\n            <List.Item.Meta\n              avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\n              title={<a href=\"https://ant.design\">{item.name}</a>}\n              description=\"halapro.liu@gmail.com\"\n            />\n            <div>content</div>\n          </List.Item>\n        )}>\n      </List>\n    )\n  }\n}\n\nexport default MyList\n","import React, { Component } from 'react'\nimport { Slider } from 'antd'\n\nclass MySlider extends Component {\n  static defaultProps = {\n    value: 0\n  }\n  constructor(props) {\n    super(props)\n    this.onChange = this.onChange.bind(this)\n  }\n  state = {\n    value: ''\n  }\n  onChange(value) {\n    this.props.onChange(value, this.props.type)\n  }\n\n  render() {\n    return (\n      <div className=\"flex\" style={this.props.style}>\n        <span>{this.props.title}</span><Slider style={{ width: 300 }} value={this.props.value} defaultValue={0} allowClear onChange={this.onChange}></Slider>\n      </div>\n    )\n  }\n}\n\nexport default MySlider\n","// import React, { Component } from 'react'\nimport MyCard from '../views/Card'\nimport MyList from '../views/List'\nimport ImageProcess from '../views/ImageProcess'\n\nconst routes = [{\n  path: '/',\n  exact: true,\n  component: MyCard\n}, {\n  path: '/list',\n  exact: true,\n  component: MyList\n}, {\n  path: '/imageProcess',\n  exact: true,\n  component: ImageProcess\n}]\n\nexport default routes\n","import React, { Component } from 'react'\nimport { Upload, Card, Button, Icon } from 'antd'\nimport { MySlider } from '../components'\n\nclass MyUpload extends Component {\n  constructor(props) {\n    super(props)\n    this.onChange = this.onChange.bind(this)\n    this.onSliderChange = this.onSliderChange.bind(this)\n  }\n  state = {\n    img: '',\n    resultImg: '',\n    fileList: [],\n    filterObj: {\n      blur: 0,\n      brightness: 0,\n      contrast: 0,\n      grayscale: 0,\n      opacity: 0,\n      saturate: 0,\n      'hue-rotate': 0,\n      invert: 0,\n      sepia: 0\n    }\n  }\n\n  // 上传图片并显示图片\n  onChange(info) {\n    const { status } = info.file\n    if (status !== 'uploading') {\n      console.log(info.file, info.fileList)\n    }\n    const reader = new FileReader()\n    reader.readAsDataURL(info.file.originFileObj)\n    reader.onload = (e) => {\n      this.setState({\n        img: e.target.result\n      })\n    }\n  }\n  // 滤镜效果\n  onSliderChange(value, type) {\n    const filterObj = this.state.filterObj\n    filterObj[type] = value\n    this.setState({\n      filterObj: filterObj\n    })\n  }\n\n  packageFiter () {\n    let arr = []\n    Object.keys(this.state.filterObj).forEach(type => {\n      switch (type) {\n        case 'blur':\n          this.state.filterObj[type] > 0 && arr.push(`${type}(${this.state.filterObj[type]}px)`)\n          break\n        case 'hue-rotate':\n          this.state.filterObj[type] > 0 && arr.push(`${type}(${this.state.filterObj[type]}deg)`)\n          break\n        default:\n          this.state.filterObj[type] > 0 && arr.push(`${type}(${this.state.filterObj[type]}%)`)\n      }\n    })\n    return arr.join(' ')\n  }\n\n  isEmptyObj(obj) {\n    for (let key in obj) {\n      return false\n    }\n    return true\n  }\n\n  cssImageToPureImage() {\n    const dom = document.getElementById('inputImg')\n    const pixelRatio = window.devicePixelRatio || 1\n    // 图片宽高\n    const width = dom.offsetWidth * pixelRatio\n    const height = dom.offsetHeight * pixelRatio\n    // 复制DOM节点\n    const cloneDom = dom.cloneNode(true)\n    cloneDom.setAttribute('xmlns', 'http://www.w3.org/1999/xhtml')\n\n    // 设置图片宽高\n    cloneDom.width = width\n    cloneDom.height = height\n\n    const img = new Image()\n    img.onload = () => {\n      let canvas = document.createElement('canvas')\n      canvas.width = width\n      canvas.height = height\n      let ctx = canvas.getContext('2d')\n      ctx.drawImage(img, 0, 0, width, height)\n      cloneDom.src = canvas.toDataURL()\n\n      const svgImg = new Image()\n      svgImg.onload = () => {\n        ctx.clearRect(0, 0, width, height)\n        ctx.drawImage(svgImg, 0, 0, width, height)\n        this.downloadImage(canvas.toDataURL('image/jpeg'))\n      }\n      svgImg.src = 'data:image/svg+xml;charset=utf-8,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"' + width + '\" height=\"' + height + '\"><foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">'+\n        new XMLSerializer().serializeToString(cloneDom).replace(/#/g, '%23').replace(/\\n/g, '%0A') +\n      '</foreignObject></svg>'\n    }\n    img.src = cloneDom.src\n  }\n  downloadImage(img) {\n    let a = document.createElement('a')\n    a.href = img\n    a.download = '滤镜图片'\n    a.click()\n  }\n  render() {\n    let uploadImg\n    const { img } = this.state\n    if (img) {\n      if (Object.keys(this.state.filterObj).some(key => this.state.filterObj[key] > 0)) {\n        const filter = this.packageFiter()\n        const filterValue = { filter: filter }\n        uploadImg = (<Card style={{ width: 300 }} cover={<img id=\"inputImg\" src={img} alt=\"\" style={filterValue} />} bodyStyle={{ display: 'none' }} />)\n      } else {\n        uploadImg = (<Card style={{ width: 300 }} cover={<img id=\"inputImg\" src={img} alt=\"\" />} bodyStyle={{ display: 'none' }} />)\n      }\n    }\n    return (\n      <div>\n        {uploadImg}\n        <Upload listType=\"picture\" fileList={this.state.fileList} onChange={this.onChange} style={{ marginTop: 30, display: 'block' }}>\n          <Button>\n            <Icon type=\"upload\" /> 上传图片\n          </Button>\n        </Upload>\n        <div className=\"flex\" style={{ marginTop: 40 }}>\n          <MySlider title=\"模糊：\" type=\"blur\" value={this.state.filterObj.blur} onChange={this.onSliderChange}></MySlider>\n          <MySlider style={{ marginLeft: 20 }} title=\"亮度：\" type=\"brightness\" value={this.state.filterObj.brightness} onChange={this.onSliderChange}></MySlider>\n          <MySlider style={{ marginLeft: 20 }} title=\"对比度：\" type=\"contrast\" value={this.state.filterObj.contrast} onChange={this.onSliderChange}></MySlider>\n        </div>\n        <div className=\"flex\" style={{ marginTop: 10 }}>\n          <MySlider title=\"灰度：\" type=\"grayscale\" value={this.state.filterObj.grayscale} onChange={this.onSliderChange}></MySlider>\n          <MySlider style={{ marginLeft: 20 }} title=\"透明度：\" type=\"opacity\" value={this.state.filterObj.opacity} onChange={this.onSliderChange}></MySlider>\n          <MySlider style={{ marginLeft: 20 }} title=\"饱和度：\" type=\"saturate\" value={this.state.filterObj.saturate} onChange={this.onSliderChange}></MySlider>\n        </div>\n        <div className=\"flex\" style={{ marginTop: 10 }}>\n          <MySlider title=\"色相旋转：\" type=\"hue-rotate\" value={this.state.filterObj['hue-rotate']} onChange={this.onSliderChange}></MySlider>\n          <MySlider style={{ marginLeft: 20 }} title=\"反转图像：\" type=\"invert\" value={this.state.filterObj.invert} onChange={this.onSliderChange}></MySlider>\n          <MySlider style={{ marginLeft: 20 }} title=\"深褐色：\" type=\"sepia\" value={this.state.filterObj.sepia} onChange={this.onSliderChange}></MySlider>\n        </div>\n        <Button style={{ marginTop: 20 }} onClick={this.cssImageToPureImage.bind(this, img)}>生成图片</Button>\n      </div>\n    )\n  }\n}\n\nexport default MyUpload\n","import React, { Component } from 'react'\nimport { Layout, Menu, Icon } from 'antd'\nimport { Link, Route } from 'react-router-dom'\nimport routes from '../routes'\n// import logo from '../logo.svg'\nconst { Sider, Header, Content } = Layout\n\nclass Container extends Component {\n  state = { selectedKey: 'index' }\n  componentWillMount() {\n    let key = window.location.hash.slice(2)\n    key = key || 'index'\n    this.setState({\n      selectedKey: key\n    })\n  }\n  render() {\n    return (\n      <Layout>\n        <Sider\n          className=\"left-menu\"\n          breakpoint=\"lg\"\n          collapsedWidth=\"0\"\n          // onBreakpoint={broken => {\n          //   console.log(broken);\n          // }}\n          onCollapse={(collapsed, type) => {\n            console.log(collapsed, type);\n          }}\n        >\n          {/* <img src={logo} className=\"App-logo\" alt=\"logo\" style={{ width: 100 }} /> */}\n          <Menu mode=\"inline\" defaultSelectedKeys={[this.state.selectedKey]} style={{ height: '100%' }}>\n            <Menu.Item key=\"index\">\n              <Link to=\"/\">\n                <Icon type=\"user\" />\n                <span className=\"nav-text\">卡片</span>\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"list\">\n              <Link to=\"/list\">\n                <Icon type=\"video-camera\" />\n                <span className=\"nav-text\">列表</span>\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"imageProcess\">\n              <Link to=\"/imageProcess\">\n                <Icon type=\"upload\" />\n                <span className=\"nav-text\">图片处理</span>\n              </Link>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout>\n          <Header style={{ background: '#fff', padding: 0 }} className=\"header-bottom\">\n            <h3 style={{ float: 'right', marginRight: '20px' }}>halapro.liu</h3>\n          </Header>\n          <Content style={{ background: '#fff' }}>\n            <div style={{ padding: 24, minHeight: 360 }}>\n              {\n                routes.map((route, index) => (\n                  <Route key={index} exact={route.exact} path={route.path} component={route.component}></Route>\n                ))\n              }\n            </div>\n          </Content>\n        </Layout>\n      </Layout>\n    )\n  }\n}\n\nexport default Container\n","import React, { Component } from 'react'\n\nimport Container from './views/Container'\n\nclass App extends Component {\n  render() {\n    return (\n      <Container></Container>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport 'antd/dist/antd.css'\nimport { HashRouter } from 'react-router-dom'\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}